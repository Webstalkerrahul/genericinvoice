# .github/workflows/staging.yml
name: Deploy to Staging

on:
  push:
    branches: [ staging ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.STAGING_SSH_PRIVATE_KEY }}
    
    - name: Add host key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.STAGING_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to staging server
      env:
        STAGING_HOST: ${{ secrets.STAGING_HOST }}
        STAGING_USER: ${{ secrets.STAGING_USER }}
      run: |
        # Copy files to server
        rsync -avz --exclude='.git/' --exclude='venv/' --exclude='__pycache__/' ./ ${STAGING_USER}@${STAGING_HOST}:/home/${STAGING_USER}/myproject/
        
        # SSH into server and restart services
        ssh ${STAGING_USER}@${STAGING_HOST} << 'ENDSSH'
          cd /home/${STAGING_USER}/myproject
          # Make scripts executable
          chmod +x scripts/*.sh
          
          # Set environment variables in .env file
          cat > .env << EOL
          SECRET_KEY=${{ secrets.STAGING_SECRET_KEY }}
          DB_NAME=${{ secrets.STAGING_DB_NAME }}
          DB_USER=${{ secrets.STAGING_DB_USER }}
          DB_PASSWORD=${{ secrets.STAGING_DB_PASSWORD }}
          ALLOWED_HOSTS=${{ secrets.STAGING_ALLOWED_HOSTS }}
          SENTRY_DSN=${{ secrets.STAGING_SENTRY_DSN }}
          EOL
          
          # Deploy with Docker Compose
          cd docker/staging
          docker-compose down
          docker-compose build
          docker-compose up -d
        ENDSSH