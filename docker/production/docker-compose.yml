
# docker/production/docker-compose.yml
version: '3.8'

services:
  web:
    build:
      context: ../../
      dockerfile: docker/production/Dockerfile
    expose:
      - "8000"
    depends_on:
      - db
    environment:
      - DEBUG=False
      - SECRET_KEY=${SECRET_KEY}
      - DB_NAME=${DB_NAME:-postgres}
      - DB_USER=${DB_USER:-postgres}
      - DB_PASSWORD=${DB_PASSWORD:-postgres}
      - DB_HOST=db
      - DB_PORT=5432
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-example.com}
      - SENTRY_DSN=${SENTRY_DSN}
      - SECURE_SSL_REDIRECT=${SECURE_SSL_REDIRECT:-True}
    networks:
      - django_network
    restart: always

  db:
    image: postgres:15
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    environment:
      - POSTGRES_PASSWORD=${DB_PASSWORD:-postgres}
      - POSTGRES_USER=${DB_USER:-postgres}
      - POSTGRES_DB=${DB_NAME:-postgres}
    networks:
      - django_network
    restart: always

  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../../nginx/production:/etc/nginx/conf.d
      - ../../staticfiles:/staticfiles
      - ../../certbot/conf:/etc/letsencrypt
      - ../../certbot/www:/var/www/certbot
    depends_on:
      - web
    networks:
      - django_network
    restart: always

  certbot:
    image: certbot/certbot
    volumes:
      - ../../certbot/conf:/etc/letsencrypt
      - ../../certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  postgres_data_prod:

networks:
  django_network: